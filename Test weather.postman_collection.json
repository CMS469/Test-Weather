{
	"info": {
		"_postman_id": "de29c407-60de-463d-aac4-26155d786dbe",
		"name": "Test weather",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28546811"
	},
	"item": [
		{
			"name": "https://samples.openweathermap.org/data/2.5/weather?q=London,uk&appid=b6907d289e10d714a6e88b30761fae22",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "pm.test(\"Latitude is correct\", function () {\r\n    const responseJson = pm.response.json();\r\n    pm.expect(responseJson.coord.lat).to.eql(51.51);\r\n});\r\npm.test(\"Longitude is correct\", function () {\r\n    const responseJson = pm.response.json();\r\n    pm.expect(responseJson.coord.lon).to.eql(-0.13);\r\n});\r\npm.test(\"Temperature is present\", function () {\r\n    const responseJson = pm.response.json();\r\n    pm.expect(responseJson.main.temp).to.be.a(\"number\");\r\n});\r\npm.test(\"Weather description is a string\", function () {\r\n    const responseJson = pm.response.json();\r\n    pm.expect(responseJson.weather[0].description).to.be.a(\"string\");\r\n});\r\npm.test(\"Country code is GB\", function () {\r\n    const responseJson = pm.response.json();\r\n    pm.expect(responseJson.sys.country).to.eql(\"GB\");\r\n});"
				},
				"url": {
					"raw": "https://samples.openweathermap.org/data/2.5/weather?q=London,uk&appid=b6907d289e10d714a6e88b30761fae22",
					"protocol": "https",
					"host": [
						"samples",
						"openweathermap",
						"org"
					],
					"path": [
						"data",
						"2.5",
						"weather"
					],
					"query": [
						{
							"key": "q",
							"value": "London,uk"
						},
						{
							"key": "appid",
							"value": "b6907d289e10d714a6e88b30761fae22"
						}
					]
				}
			},
			"response": []
		}
	]
}